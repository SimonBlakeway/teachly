<script async src="https://cdnjs.cloudflare.com/ajax/libs/lz-string/1.4.4/lz-string.min.js"
  integrity="sha512-qoCTmFwBtCPvFhA+WAqatSOrghwpDhFHxwAGh+cppWonXbHA09nG1z5zi4/NGnp8dUhXiVrzA6EnKgJA+fyrpw=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>





<style>
  #create-course {
    /* fallback for old browsers */
    background: rgb(85, 138, 230);
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to bottom right, rgba(3, 71, 117), rgba(85, 138, 230));
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to bottom right, rgb(3, 71, 117), rgb(85, 138, 230));
    height: 80%;
    width: 100%;
    font-size: 18px;
    background-image: url("/images/blue-bg.jpg") !important;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    margin-top: -20px !important;

  }

  .custom-rounded {
    border-radius: 3%;
  }

  .course-input {
    font-size: 222px;
    font-family: calibri;
    width: 100%;
    padding: 0px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: #0baecf;
    text-align: center;
    background-color: rgb(210, 233, 231);
    cursor: pointer;
  }

  #course-image {
    font-size: 15px;
    font-family: calibri;
    width: 120px !important;
    height: 46px;
    padding: 4px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: #0baecf;
    text-align: center;
    background-color: rgb(210, 233, 231);
    cursor: pointer;
  }

  .popup {
    position: absolute;
    z-index: 20;
    width: 300px;
    height: 300px;
    background-color: #ffffff;
    display: none;
    visibility: hidden;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    text-align: left;
    overflow: auto;
    -ms-overflow-style: none;
    /* Internet Explorer 10+ */
    scrollbar-width: none;
    /* Firefox */
    font-size: 20px;
    border-radius: 10px;
    webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    border-style: solid;
    border-color: white;
    border-width: 30px;
  }

  .popup::-webkit-scrollbar {
    display: none;
    /* Safari and Chrome */
  }

  #subject-popup {
    text-align: left;
    width: 240px;
    padding: 10px;
    font-size: 20px;
    margin-top: 0px;
    padding-left: 20px !important;
    margin-top: 420px;


  }

  #speciality-popup {
    width: 310px;
    height: 300px;
    padding: 10px;
    font-size: 20px;
    margin-top: 420px;
    border-width: 5px;
    font-size: 12px;
    padding-bottom: 20px;
  }

  #timeRange-popup {
    width: 300px;
    height: 460px;
    margin-top: 490px;
    margin-right: 0px;
    border-width: 10px;
  }

  .day-div {
    background-color: #89c4ff;
    width: 100% !important;
    height: 50px;
    margin: 2px;
    text-align: center;
    font-size: 30px;
    margin: 5px;
  }

  .time-slot-div {
    background-color: #89c4ff;
    border-radius: 12px 6px;
    width: 85px !important;
    height: 50px;
    margin-left: 5px !important;
    margin-right: 5px !important;
    margin-top: 1px;
    margin: 2px !important;

  }

  .active-time-slot-div {
    background-color: #277dd3;
    border-radius: 14px 7px;
  }

  #taughtIn-popup {
    width: 250px;
    height: 400px;
    margin-top: 520px;
  }

  .day-div {
    background-color: #89c4ff;
    width: 100% !important;
    height: 50px;
    margin: 2px;
    text-align: center;
    font-size: 30px;
    margin: 5px;
  }

  .time-slot-div {
    background-color: #89c4ff;
    border-radius: 12px 6px;
    width: 85px !important;
    height: 50px;
    margin-left: 5px !important;
    margin-right: 5px !important;
    margin-top: 1px;
    margin: 2px !important;

  }

  .active-time-slot-div {
    background-color: #277dd3;
    border-radius: 14px 7px;
  }

  .mn-w-270p {
    min-width: 270px;
  }

  .bg-dkr-lght-color {
    background-color: #daecfd !important;
  }

  .w-240p {
    width: 240px;
  }

  #subject-box {
    list-style-type: none;
    text-align: center;
    padding: 0px;
  }

  li {
    padding: 5px;
    text-align: center;
  }

  html {
    overflow-x: hidden;
  }
</style>
<section id="create-course" class="py-5 px-0 mx-0 mt-5 d-flex justify-content-center align-items-center w-100"
  onclick="clearCoursePopups()">
  <div class="container bg-light shadow-md w-75 mn-w-270p custom-rounded">
    <form onsubmit="return false" class="row d-flex justify-content-center align-items-center">
      <div class="col-12 p-1">
        <h3 class="m-4 fs-2">{{context.bodyContext.createCourseForm}}</h3>
        <div class="row container d-flex align-items-center justify-content-center m-0 p-0"
          onclick="event.stopPropagation();">
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p"
            onclick='toggleCoursePopup("subject-popup")'>
            <div>
              <div class="my-2">{{context.bodyContext.subject}}</div>
              <div class="d-flex align-items-center justify-content-center">
                <div id="subject" class="text-center py-2 border rounded border-primary w-240p">
                  {{context.bodyContext.choose}}</div>
                <div
                  style='height: 0px;width: 0px; overflow:hidden; position: absolute; margin-right: 200px;  margin-bottom: -17px;'>
                  <input required id="hidden-subject-input" />
                </div>
              </div>
            </div>
            <div class="popup" id="subject-popup">
              <div>
                <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                  id="subject-search-input" onkeyup="searchBox('subject-box', 'subject-search-input')"></input>
              </div>
              <ul id="subject-box" onclick='toggleCoursePopup("subject-popup")'>
              </ul>
            </div>
          </div>
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p"
            onclick='toggleCoursePopup("speciality-popup")'>
            <div>
              <div class="my-2">{{context.bodyContext.specialities}}</div>
              <div class="d-flex align-items-center justify-content-center">
                <div id="specialities" class="text-center py-2 border rounded border-primary w-240p">
                  {{context.bodyContext.choose}}</div>
              </div>
            </div>
            <div class="popup" id="speciality-popup" onclick="event.stopPropagation();">
              <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                id="speciality-search-input" placeholder=""
                onkeyup="searchBox('speciality-checkboxes', 'speciality-search-input')"></input>
              <div id="speciality-checkboxes" class="pt-4">
                <div class="text-center">{{context.bodyContext.pleaseChoosesSubject}}</div>
              </div>
            </div>
          </div>
        </div>
        <div class="row container d-flex align-items-center justify-content-center m-0 p-0">
          <div class="col p-0 m-2 d-flex align-items-center justify-content-center bg-dkr-lght-color mn-w-270p"
            style="min-height:225px !important;">
            <div class="mn-w-270p bg-dkr-lght-color p-3 h-100">
              <div class="my-2">{{context.bodyContext.description}}</div>
              <textarea required id="description" style="height:max-content;" id="subject-search-input" name="" rows="5"
                cols="80" maxlength="512" placeholder="{{context.bodyContext.maxLenDesChars}}"
                class="form-control form-control-lg border border-info rounded fs-6 text-left"></textarea>
            </div>
          </div>
          <div class="col p-0 m-2 mn-w-270p" style="min-height:225px;">
            <div class="row d-flex align-items-center justify-content-center m-0 p-2 mb-3 bg-dkr-lght-color mn-w-270p"
              style="height: 104.5px;">
              <div class="h-200p">
                <div class="my-2 mx-3">{{context.bodyContext.courseImg}}</div>
                <div class="d-flex align-items-center justify-content-center">
                  <div id="course-image" class="border rounded border-primary bg-dkr-lght-color overflow-hidden"
                    onclick="getFile()"
                    style="padding-top: 10px; height: 40px; width:240px !important; overflow:hidden !important; margin-bottom: 1px !important;">
                    {{context.bodyContext.clickUploadImageRatio}}</div>
                  <div class=""
                    style='height: 0px;width: 0px; overflow:hidden; position: absolute; margin-right: 320px; margin-bottom: 20px;'>
                    <input required id="upfile" type="file" value="upload" onchange="sub(this)" accept="image/*" />
                  </div>
                </div>
              </div>
            </div>
            <div class="row d-flex align-items-center justify-content-center m-0 p-2 mt-3 bg-dkr-lght-color mn-w-270p"
              style="min-height: 104.5px;" onclick="event.stopPropagation();">
              <div class="h-200p d-flex align-items-center justify-content-center"
                onclick='toggleCoursePopup("taughtIn-popup")'>
                <div>
                  <div class="my-2">{{context.bodyContext.taughtIn}}</div>
                  <div class="d-flex align-items-center justify-content-center w-100 text-center">
                    <div id="taughtIn"
                      class="border rounded border-primary d-flex align-items-center justify-content-center py-2 w-240p">
                      {{context.bodyContext.choose}}
                      <div
                        style='height: 0px;width: 0px; overflow:hidden; position: absolute; margin-right: 200px; margin-top: 20px;'>
                        <input required id="upfile" />
                      </div>
                    </div>
                  </div>
                </div>
                <div class="popup" id="taughtIn-popup">
                  <div class="d-flex align-items-center justify-content-center">
                    <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                      id="taughtIn-search-input" style="width: 90% !important; margin:5px;"
                      onkeyup="searchBox('taughtIn-list', 'taughIn-search-input')"></input>
                  </div>
                  <div id="taughtIn-list" class="p-0 pt-3" onclick='toggleCoursePopup("taughtIn-popup")'>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="row container d-flex align-items-center justify-content-center m-0 p-0"
          onclick="event.stopPropagation();">
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p">
            <div onclick="clearCoursePopups()">
              <div class="my-2">{{context.bodyContext.priceIn}} {{context.settings.cur}}</div>
              <div class="d-flex align-items-center justify-content-center">
                <input type="number" id="price" required min="1" style="width: 240px !important;"
                  class="course-input form-control form-control-lg border border-info rounded w-100"></input>
              </div>
            </div>
          </div>
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p"
            onclick='toggleCoursePopup("timeRange-popup")'>
            <div>
              <div class="my-2">{{context.bodyContext.timeRange}}</div>
              <div class="d-flex align-items-center justify-content-center">
                <div id="timeRange-button"
                  class="text-center py-2 border rounded border-primary w-240p d-flex align-items-center justify-content-center">
                  {{context.bodyContext.choose}}
                  <div
                    style='height: 0px;width: 0px; overflow:hidden; position: absolute; margin-right: 200px;  margin-bottom: -20px;'>
                    <input required id="hidden-timeRange-input" for="nach" />
                  </div>
                </div>
              </div>
              <div class="d-flex align-items-center justify-content-center">
                <div class="popup" id="timeRange-popup">
                  <div id="timeRange-popup-rows" class="text-center w-100 p-0" onclick="event.stopPropagation();">
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>



        <div class="row container d-flex align-items-center justify-content-center m-0 p-0"
          onclick="event.stopPropagation();">
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p">
            <div onclick="clearCoursePopups()">
              <div class="my-2">{{context.bodyContext.priceIn}} {{context.settings.cur}}</div>
              <div class="d-flex align-items-center justify-content-center">
                <label for="customRange3" class="form-label">Example range</label>
                <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">
              </div>
            </div>
          </div>
          <div class="col p-2 bg-dkr-lght-color m-2 d-flex align-items-center justify-content-center mn-w-270p"
            onclick='toggleCoursePopup("timeRange-popup")'>

          </div>
        </div>





        <div class="row pt-5">
          <div class="col-md-12 mb-4">
            <div class="d-flex justify-content-center">
              <button type='submit' onclick="sendCourseData()" class="btn btn-outline-primary btn-lg mb-3">
                {{context.bodyContext.createCourse}}</button>
            </div>
          </div>
        </div>
    </form>
  </div>
</section>

<div id="err-popup" class="popup text-dark" style="position: fixed;">
  <div class="err" id="image-err">{{context.bodyContext.errPopup.nameErr}}</div>
</div>

<script>
  const imageWorker = new Worker('/js/imageWorker.js');
  imageWorker.onmessage = function (e) {
    imageStr = e.data;
  };

  imageWorker.postMessage("base64Image");

  const days = ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
  var specialitiesObj = {};
  var imageStr = false
  var taughtInArr = []

  function setSubject(subject) {
    document.getElementById("subject").innerText = subject
    document.getElementById("hidden-subject-input").value = subject
    document.getElementById("speciality-checkboxes").innerHTML = ""
    arr = specialitiesObj[`${subject}`]
    if (arr == "") {
      node = document.createElement("div");
      node.innerHTML = "no specialties";
      node.className = "text-center fs-5"
      document.getElementById("speciality-checkboxes").appendChild(node);
      return
    }
    for (let i = 0; i < arr.length; i++) {
      node = document.createElement("div");
      node.className = "my-2"
      specialityWithBars = arr[i].replaceAll(" ", "-").replaceAll("'", "&apos")
      node.innerHTML = `
                    <input class="form-check-input" type="checkbox" id="${specialityWithBars}" name="${specialityWithBars}" onclick='setSpeciality("${specialityWithBars}")'></input>
                    <label class="form-check-label text-dark" for=${specialityWithBars}>${arr[i]}</label><br>`;
      document.getElementById("speciality-checkboxes").appendChild(node);
    }
    clearCoursePopups()
  }

  function setSpeciality() {
    innerDivs = document.getElementById("speciality-checkboxes").children
    chosenSpec = []
    for (i = 0; i < innerDivs.length; i++) {
      if (innerDivs[i].children[0].checked) {
        chosenSpec.push(innerDivs[i].children[1].innerText)
      }
    }
    if (chosenSpec.length != 0) {
      document.getElementById("specialities").innerText = chosenSpec.join(", ")
    }
    else {
      document.getElementById("specialities").innerText = "{{context.bodyContext.choose}}"
    }
  }

  function setTimeRange(id) {
    timeRangeCheckbox = document.getElementById(id)
    classNameArr = timeRangeCheckbox.className.split(" ")
    isActivated = classNameArr.indexOf("active-time-slot-div")
    if (isActivated != -1) {
      classNameArr.splice(isActivated, 1)
      timeRangeCheckbox.className = classNameArr.join(" ")
    }
    else { timeRangeCheckbox.className += " active-time-slot-div" }
    timeRanges = document.getElementsByClassName("active-time-slot-div")
    field = document.getElementById('hidden-timeRange-input');
    if (timeRanges.length != 0) { field.value = "activated" }
    else { field.value = field.defaultValue; } //setting to "" stops required from working}
  }

  function setTaughtIn() {
    innerDivs = document.getElementById("taughtIn-list").children
    chosenSpec = []
    taughtInArr = []
    for (i = 0; i < innerDivs.length; i++) {
      if (innerDivs[i].children[0].checked) {
        chosenSpec.push(innerDivs[i].children[1].innerHTML)
        taughtInArr.push(innerDivs[i].children[1].id.split("-")[0])
      }
    }
    if (chosenSpec.length != 0) {
      document.getElementById("taughtIn").innerText = chosenSpec.join(", ")
    }
    else {
      document.getElementById("taughtIn").innerText = "{{context.bodyContext.choose}}"
    }
  }

  function searchBox(boxId, inputId) {
    try {
      filter = document.getElementById(inputId).value.toUpperCase();
      boxChildren = document.getElementById(boxId).children;
      for (i = 0; i < boxChildren.length; i++) {
        txtValue = boxChildren[i].textContent || boxChildren[i].innerHTML;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          boxChildren[i].style.display = "";
        } else {
          boxChildren[i].style.display = "none";
        }
      }
    }
    catch (err) {

    }
  }

  function clearCoursePopups() {
    popupArr = document.getElementsByClassName("popup")
    for (i = 0; i < popupArr.length; i++) {
      popupArr[i].style.display = "none";
      popupArr[i].style.visibility = "hidden";
    }
  }

  function toggleCoursePopup(id) {
    var subjectPopup = document.getElementById(id);
    if (subjectPopup.style.display == "block") {
      subjectPopup.style.display = "none";
      subjectPopup.style.visibility = "hidden";
    }
    else {
      clearCoursePopups()
      subjectPopup.style.display = "block";
      subjectPopup.style.visibility = "visible";

      try {
        document.getElementById(id.split("-")[0] + "-search-input").focus();
      }
      catch {

      }
    }
  }

  function toggleErrPopup(errName) {
    var ErrPopups = document.getElementsByClassName("err");
    for (i = 0; i < ErrPopups.length; i++) {
      ErrPopups[i].style.display = "none";
      ErrPopups[i].style.visibility = "hidden";

    }
    chosenPopup = document.getElementById(errName + "-err")
    chosenPopup.style.display = "block";
    chosenPopup.style.visibility = "visible";

    popup = document.getElementById("err-popup")
    popup.style.display = "block";
    popup.style.visibility = "visible";
    setTimeout(function () {
      $(`#${errName}-err`).fadeOut('fast')
    }, 1000);
  }

  function getFile() {
    clearCoursePopups()
    document.getElementById("upfile").click();
  }

  function sub(obj) {
    clearCoursePopups()
    var file = obj.value;
    reader = new FileReader();
    reader.onloadend = () => {
      base64Image = reader.result.split(';base64,').pop();
      imageStr = false;
      imageWorker.postMessage(base64Image);
    }
    reader.readAsDataURL($('#upfile').prop('files')[0])

    var fileName = file.split("\\");
    if (fileName[fileName.length - 1] == "") {
      document.getElementById("course-image").innerHTML = "{{context.bodyContext.clickUploadImageRatio}}"
    }
    else {
      document.getElementById("course-image").innerHTML = fileName[fileName.length - 1];
    }
  }

  async function sendCourseData() {

    function convertTimeRange(arr) {
      obj = {}
      for (i = 0; i < arr.length; i++) {
        index = days.indexOf(arr[i].split("-")[0])
        if (index != -1) {
          subObj = days[index]
          if (obj[subObj]) {
            obj[subObj].push(arr[i].split("-").slice(1, 3).join("-"))
          }
          else {
            obj[subObj] = [arr[i].split("-").slice(1, 3).join("-")]
          }
        }
      }
      return Object.keys(obj) != 0 ? obj : false
    }

    function basicCourseObjCheck(obj) {
      if (obj.subject == "") { return false }
      if (obj.description == "") { return false }
      if (obj.taughtIn == "") { return false }
      if (obj.price == "") { return false }
      if (obj.price > 60) { return false }
      if (obj.price < 1) { return false }
      if (obj.timeRange == "") { return false }
      return true
    }

    async function sendReq(courseData) {
      try {
        res = await axios({
          method: 'post',
          url: '/teach/createCourse',
          data: courseData,
          headers: {
            'Content-Type': 'application/json',
          },
        })
        if (res.data.err) {
          //toggleErrPopup(res.data.err)
        }
        else {
          console.log("reee")
          window.location.href = window.location.origin + "/";
        }
      }
      catch (err) {
        console.log(err)
      }
    }
    try {
      courseData = {
        subject: $("#subject").text(),
        specialities: $("#specialities").text().split(", "),
        description: $("#description").val(),
        courseImg: imageStr,
        taughtIn: taughtInArr,
        pricePerLesson: $("#price").val(),
        availableTimes: $(".active-time-slot-div").map(function () { return this.id }).get()
      }
      if (!basicCourseObjCheck(courseData)) {
        return
      }
      // lzstring returns a promise, so must make sure is complete
      Promise.resolve(courseData.courseImg).then(function (value) {
        sendReq(courseData)
      })
    }
    catch (err) {
      console.log(err)
    }
  }
  window.addEventListener('load', async function () {
    async function populateSubjects() {
      try {
        res = await axios.get('/get/validSubject')
        let arr = res.data.sort((a, b) => { return a.localeCompare(b, userLang) })
        subjectArr = arr
        for (let i = 0; i < arr.length; i++) {
          node = document.createElement("li");
          node.innerHTML = `<div class="subject-li" onclick='setSubject("${arr[i]}")''>${arr[i]}</div>`;
          document.getElementById("subject-box").appendChild(node);
        }
        return arr
      }
      catch (err) {
      }
    }

    async function populateSpecialities(subjects) {
      async function appendSpec(subject) {
        res = await axios.get(`/get/validSpecialities/${subject}`)
        specArr = [];
        if (res.data) {
          specArr = res.data.sort((a, b) => { return a.localeCompare(b, userLang) })
        }
        else {
          specArr = ""
        }
        specialitiesObj[`${subject}`] = specArr
      }
      try {
        for (i = 0; i < subjects.length; i++) {
          appendSpec(subjects[i])
        }
      }
      catch (err) {
      }
    }
    subjects = await populateSubjects()
    populateSpecialities(subjects)

    //populate taughtin
    arr = languageArr.sort((a, b) => { return a[0].localeCompare(b[0], userLang) })
    for (let i = 0; i < arr.length; i++) {
      langPair = arr[i].split(",")
      node = document.createElement("div");
      node.innerHTML = `
                    <input class="form-check-input w-20p mr-5p" type="checkbox" id="${langPair[0]}" name="${langPair[0]}" onclick='setTaughtIn()'></input>
                    <label class="form-check-label text-dark" id="${langPair[1]}-label" for=${langPair[0]}>${langPair[0]}</label><br>`;
      document.getElementById("taughtIn-list").appendChild(node);
    }

    timeRange = document.getElementById("timeRange-popup-rows")
    for (let i = 0; i <= 6; i++) {
      outerDiv = document.createElement("div");
      outerDiv.className = "row container d-flex align-items-center justify-content-center px-0 w-255p p-0 m-0 pb-3";
      dayVal = document.createElement("div");
      dayVal.className = "day-div px-0"
      dayVal.innerHTML = `${days[i]}`;
      outerDiv.appendChild(dayVal);
      for (let j = 0; j <= 23; j++) {
        innerDiv = document.createElement("div");
        innerDiv.className = "container d-flex align-items-center justify-content-center time-slot-div px-0";
        innerDiv.innerHTML = `${j} - ${j + 1}`;
        innerDiv.id = `${j}-${j + 1}_${days[i]}`;
        innerDiv.onclick = function () { setTimeRange(`${j}-${j + 1}_${days[i]}`) }
        outerDiv.appendChild(innerDiv);
      }
      timeRange.appendChild(outerDiv);
    }

    //populate price input
    price = document.getElementById("price")
    price.max = 60 * curConversionRatio

  })


</script>
</section>