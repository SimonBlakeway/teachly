<style>
  #create-course {
    /* fallback for old browsers */
    background: rgb(85, 138, 230);
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to bottom right, rgba(3, 71, 117), rgba(85, 138, 230));
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to bottom right, rgb(3, 71, 117), rgb(85, 138, 230));
    height: 80%;
    width: 100%;
    font-size: 18px;
    margin-top: -140px;
  }

  .course-input {
    font-size: 222px;
    font-family: calibri;
    width: 100%;
    padding: 0px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: #0baecf;
    text-align: center;
    background-color: rgb(210, 233, 231);
    cursor: pointer;
  }

  #course-image {
    font-size: 15px;
    font-family: calibri;
    width: 100%;
    height: 46px;
    padding: 4px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: #0baecf;
    text-align: center;
    background-color: rgb(210, 233, 231);
    cursor: pointer;
  }

  .subject-li {
    text-decoration: none;
  }

  section.range-slider {
    position: relative;
    width: 200px;
    height: 35px;
    text-align: center;
  }

  section.range-slider input {
    pointer-events: none;
    position: absolute;
    overflow: hidden;
    left: 0;
    top: 10px;
    width: 250px !important;
    outline: none;
    height: 18px;
    margin: 0;
    padding: 0;
  }

  section.range-slider input::-webkit-slider-thumb {
    pointer-events: all;
    position: relative;
    z-index: 1;
    outline: 0;
  }

  section.range-slider input::-moz-range-thumb {
    pointer-events: all;
    position: relative;
    z-index: 10;
    -moz-appearance: none;
    width: 9px;
  }

  section.range-slider input::-moz-range-track {
    position: relative;
    z-index: -1;
    background-color: rgba(0, 0, 0, 1);
    border: 0;
  }

  section.range-slider input:last-of-type::-moz-range-track {
    -moz-appearance: none;
    background: none transparent;
    border: 0;
  }

  section.range-slider input[type=range]::-moz-focus-outer {
    border: 0;
  }

  .popup {
    position: absolute;
    z-index: 20;
    width: 300px;
    height: 300px;
    background-color: #ffffff;
    display: none;
    visibility: hidden;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    text-align: left;
    overflow: auto;
    -ms-overflow-style: none;
    /* Internet Explorer 10+ */
    scrollbar-width: none;
    /* Firefox */
    font-size: 20px;
    border-radius: 10px;
    webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    border-style: solid;
    border-color: white;
    border-width: 30px;
  }

  .popup::-webkit-scrollbar {
    display: none;
    /* Safari and Chrome */
  }

  #pricePerLesson-popup {
    width: 300px;
    height: 160px !important;
    margin-top: 220px;
    margin-left: 200px;
    padding: 0px;
    border-width: 5px;
  }

  #subject-popup {
    text-align: left;
    width: 200px;
    padding: 10px;
    overflow: auto;
    font-size: 20px;
    margin-top: 400px;
    padding-left: 20px !important;


  }

  #speciality-popup {
    width: 280px;
    height: 300px;
    padding: 10px;
    font-size: 20px;
    margin-top: 400px;
  }

  #timeRange-popup {
    width: 460px;
    height: 460px;
    margin-top: 530px;
    margin-right: 220px;
    align-items: center;
    justify-content: center;
  }

  #taughtIn-popup {
    width: 200px;
    height: 400px;
    margin-left: -35px;
    margin-top: 500px;
  }

  .day-div {
    background-color: #89c4ff;
    width: 100% !important;
    height: 50px;
    margin: 2px;
    text-align: center;
    font-size: 30px;
    margin: 5px;
  }

  .time-slot-div {
    background-color: #89c4ff;
    border-radius: 12px 6px;
    width: 85px !important;
    height: 50px;
    margin-left: 5px !important;
    margin-right: 5px !important;
    margin-top: 1px;
    margin: 2px !important;

  }

  .active-time-slot-div {
    background-color: #277dd3;
    border-radius: 14px 7px;
  }

  .course-col {
    background-color: gold;
    text-align: center;
    padding: 10px !important;
    min-height: 80px !important;
    max-width: 300px !important;
    min-width: 170px !important;
    margin-top: 10px !important;
    border-radius: 5%;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }



  @media only screen and (max-width: 770px) {

    #speciality-popup {}

    #timeRange-popup {
      width: 340px !important;
      height: 520px;
      border-width: 15px;
      margin-right: 150px !important;
      margin-top: 640px;
    }

    .course-col {
      background-color: goldenrod;
      max-width: 200px !important;
    }

  }

  @media only screen and (max-width: 600px) {
    #speciality-popup {}
  }

  @media only screen and (max-width: 500px) {
    .popup {
      width: 80%;
      height: 45%;
    }

    .course-input {
      width: 80%;
    }
  }

  @media only screen and (max-width: 450px) {
    #timeRange-popup {
      height: 520px;
      width: 315px !important;
      margin-right: 140px !important;
      margin-top: 640px;
      border-left-width: 3px !important;
      border-right-width: 3px !important;
      padding: -5px !important;
    }

    #pricePerLesson-popup {}

    #subject-popup {}

    #speciality-popup {}


    #taughtIn-popup {}
  }

  @media only screen and (max-width: 300px) {
    .popup {
      width: 80%;
      height: 50%;
      padding: 0px;
    }
  }
</style>

<section id="create-course" onclick="clearCoursePopups()">
  <section id="form-section">
    <div class="container py-5">
      <div class="row justify-content-center align-items-center h-100">
        <div class="col-12 col-lg-9 col-xl-7">
          <div class="registration-form-color" style="border-radius: 15px; background-color: rgb(210, 233, 231);">
            <div class="p-4 p-md-5">
              <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">{{context.bodyContext.registrationForm}}</h3>
              <div class="row" onclick="event.stopPropagation();">
                <div class="col container d-flex align-items-center justify-content-center course-col"
                  onclick='toggleCoursePopup("subject-popup")'>
                  <div>
                    <div style="font-size: 25px; font-weight:500; margin-bottom: 10px;">subject</div>
                    <div id="subject">choose</div>
                  </div>
                  <div class="popup" id="subject-popup">
                    <div>
                      <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                        id="subject-search-input" onkeyup="subjectSearch()"></input>
                    </div>
                    <ul id="subject-links" onclick='toggleCoursePopup("subject-popup")'>
                    </ul>
                  </div>
                </div>

                <div class="col container d-flex align-items-center justify-content-center course-col">
                  <div onclick='toggleCoursePopup("speciality-popup")'>

                    <div style="font-size: 25px; font-weight:500; margin-bottom: 10px;">specialities</div>
                    <div id="specialities">ã…¤</div>
                  </div>
                  <div class="popup" id="speciality-popup">
                    <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                      id="speciality-search-input" placeholder="" onkeyup="specialitySearch()"></input>
                    <div id="speciality-checkboxes"></div>
                  </div>
                </div>
              </div>



              <div class="row">

                <div class="col container d-flex align-items-center justify-content-center course-col"
                  onclick='toggleCoursePopup("subject-popup")'>
                  <div>
                    <div style="font-size: 25px; font-weight:500; margin-bottom: 10px;">description</div>
                    <div id="subject">choose</div>
                  </div>
                  <div class="popup" id="subject-popup">
                    <div>
                      <input class="course-input form-control form-control-lg border border-info rounded" type="text"
                        id="subject-search-input" onkeyup="subjectSearch()"></input>
                    </div>
                    <ul id="subject-links" onclick='toggleCoursePopup("subject-popup")'>
                    </ul>
                  </div>
                </div>

                <div class="col-md-6 mb-6">
                  <label class="form-label text">{{context.bodyContext.profileImage}}</label>
                  <div id="course-image" onclick="getFile()" style="padding-top: 10px; height: 44px;">click to upload
                    image</div>
                  <div class="border border-info rounded " style='height: 0px;width: 0px; overflow:hidden;'><input
                      required id="upfile" type="file" value="upload" onchange="sub(this)" accept="image/*" /></div>
                </div>
              </div>
              <div class="row">
                <div class="col-md-12 mb-4">
                  <div class="form-check d-flex justify-content-center mb-5">
                    <label class="form-check-label">
                      {{context.bodyContext.IAgreeTo}} <a href="\termsofservice"
                        class="text-body"><u>{{context.bodyContext.TOS}}</u></a>
                    </label>
                  </div>
                  <div class="d-flex justify-content-center">
                    <button type='submit' onclick="sendSigninReq()"
                      class="btn btn-success btn-block btn-lg gradient-custom-4 text-body">
                      {{context.bodyContext.createCourse}}</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
    </div>
  </section>


  <div id="email-popup" class="popup">
    <form onsubmit="return false" id="">
      <label id="email-label" class="text" for="email-input"
        style="font-size: 18px;">{{context.bodyContext.emailPopup.text}}</label>
      <br>
      <input maxlength="5" type="numbers" required type="text" id="email-input"
        class="form-control form-control-lg border border-info rounded course-input" />
      <br>
      <button id="email-popup-submit" type='submit' onclick="sendEmailCode()"
        class="btn btn-success btn-block btn-lg">{{context.bodyContext.emailPopup.submitButtonText}}</button>
    </form>
  </div>

  <div id="err-popup" class="popup" style="height: 20%; width: 40%;">
    <div id="email-err">{{context.bodyContext.errPopup.emailErr}}</div>
    <div id="name-err">{{context.bodyContext.errPopup.nameErr}}</div>
  </div>

  <div id="emailcode-err-popup" class="popup" style="height: 10%; width: 20%;">
    <div>{{context.bodyContext.emailCode.invalidEmailCode}}</div>
  </div>


  <script>
    function getFile() {
      document.getElementById("upfile").click();
    }

    function sub(obj) {
      var file = obj.value;
      var fileName = file.split("\\");
      document.getElementById("profile-image").innerHTML = fileName[fileName.length - 1];
    }

    sendEmailCode = async function () {
      emailCode = $("#email-input").val();
      email = $("#email").val();
      res = await axios.get('/auth/emailValidation', { params: { "emailCode": emailCode, "email": email } });
      if (res.data.err) {
        console.log(res.data.err)

        $("#emailcode-err-popup").attr("display", "grid");
        setTimeout(function () {
          $("#emailcode-err-popup").fadeOut('fast')
        }, 1000);

      }
      else {
        window.location = "/"
      }
    }



    sendSigninReq = async function () {
      try {
        reader = new FileReader();
        reader.onloadend = () => {
          sendReq([$("#username").val(), reader.result, $("#password").val(), $("#email").val()])
        };
        reader.readAsDataURL($('#upfile').prop('files')[0])

        sendReq = async function (arr) {
          try {
            formData = {
              'name': arr[0],
              'profileImage': arr[1],
              'password': arr[2],
              'email': arr[3],
            }
            res = await axios({
              method: 'post',
              url: '/auth/register',
              data: formData,
              headers: {
                'Content-Type': 'application/json',
              },
            })
            if (res.data.err) {
              $("#err-popup").attr("display", "grid");
              document.getElementById("err-popup").style.display = "grid";
              if (res.data.err == "name taken") {
                $('#name-err').show();
                $('#email-err').hide();
                setTimeout(function () {
                  $('#err-popup').fadeOut('fast')
                }, 1000);
              }
              if (res.data.err == "email taken") {
                $('#name-err').hide();
                $('#email-err').show();
                setTimeout(function () {
                  $('#err-popup').fadeOut('fast')
                }, 1000);
              }
            }
            else {

              document.getElementById("email-popup").style.display = "grid";
              document.getElementById("form-section").style.visibility = "hidden";
            }
          }
          catch (err) {
            console.log(err)
          }
        }
      }
      catch {

      }
    }
  </script>
</section>


<script>


  function subjectSearch() {
    var input, filter;
    input = document.getElementById("subject-search-input");
    filter = input.value.toUpperCase();

    a = document.getElementsByClassName("subject-li");

    console.log(a)
    for (i = 0; i < a.length; i++) {
      txtValue = a[i].textContent || a[i].innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        a[i].style.display = "";
      } else {
        a[i].style.display = "none";
      }
    }
  }

  function specialitySearch() {
    var input, filter;
    input = document.getElementById("speciality-search-input");
    filter = input.value.toUpperCase();
    checkboxes = document.getElementsByClassName("speciality-checkboxes-p");
    for (i = 0; i < checkboxes.length; i++) {
      txtValue = checkboxes[i].textContent || checkboxes[i].innerHTML;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        checkboxes[i].style.display = "";
      } else {
        checkboxes[i].style.display = "none";
      }
    }
  }

  function taughtInSearch() {
    var input, filter;
    input = document.getElementById("taughtIn-search-input");
    filter = input.value.toUpperCase();
    checkboxes = document.getElementsByClassName("taughtIn-checkboxes-p");
    for (i = 0; i < checkboxes.length; i++) {
      txtValue = checkboxes[i].textContent || checkboxes[i].innerHTML;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        checkboxes[i].style.display = "";
      } else {
        checkboxes[i].style.display = "none";
      }
    }
  }

  function clearCoursePopups() {
    popupArr = document.getElementsByClassName("popup")
    for (i = 0; i < popupArr.length; i++) {
      popupArr[i].style.display = "none";
      popupArr[i].style.visibility = "hidden";
    }
  }

  function toggleCoursePopup(id) {
    var subjectPopup = document.getElementById(id);
    if (subjectPopup.style.display == "block") {
      subjectPopup.style.display = "none";
      subjectPopup.style.visibility = "hidden";
    }
    else {
      clearCoursePopups()
      subjectPopup.style.display = "block";
      subjectPopup.style.visibility = "visible";

      try {
        document.getElementById(id.split("-")[0] + "-search-input").focus();
      }
      catch {

      }
    }
  }

  function getVals() {
    // Get slider values
    var parent = this.parentNode;
    var slides = parent.getElementsByTagName("input");
    var slide1 = parseFloat(slides[0].value);
    var slide2 = parseFloat(slides[1].value);
    // Neither slider will clip the other, so make sure we determine which is larger
    if (slide1 > slide2) { var tmp = slide2; slide2 = slide1; slide1 = tmp; }

    var displayElement = parent.getElementsByClassName("rangeValues")[0];
    displayElement.innerHTML = slide1 + " - " + slide2;
  }

  function chooseInput(subject) {
    clearCoursePopups()
    console.log(subject)
  }

  window.addEventListener('load', function () {
    axios.get('/get/validSubject').then(res => {
      if (res.data == "404") { }
      else {
        arr = res.data.sort((a, b) => { return a.localeCompare(b, userLang) })
        for (i = 0; i < arr.length; i++) {
          axios.get(`/get/validSpecialities/${arr[i]}`).then(res => {
            if (res.data == "404") {
            }
            else {
              arr = res.data
              for (let i = 0; i < arr.length; i++) {
                arr = res.data.sort((a, b) => { return a.localeCompare(b, userLang) })
                p = document.createElement("p");
                p.className = "speciality-checkboxes-p";
                label = document.createElement("label");
                label.htmlFor = `${arr[i].replaceAll(" ", "-")}-checkbox`
                label.innerHTML = `<input type="checkbox" id="${arr[i].replaceAll(" ", "-")}-checkbox" name="${arr[i].replaceAll(" ", "-")} checkbox" value="${arr[i]}-checkbox"><span>${arr[i]}</label>`
                p.appendChild(label);
                document.getElementById("speciality-checkboxes").appendChild(p);
              }
            }
          })
        }
        for (let i = 0; i < arr.length; i++) {
          node = document.createElement("li");
          node.innerHTML = `<div class="subject-li" onclick='chooseInput("${arr[i]}")''>${arr[i]}</div>`;
          document.getElementById("subject-links").appendChild(node);
        }
      }
    })
  })


</script>